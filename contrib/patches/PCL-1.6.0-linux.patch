Index: cmake/Modules/FindOpenNI.cmake
===================================================================
--- cmake/Modules/FindOpenNI.cmake	(revision 8741)
+++ cmake/Modules/FindOpenNI.cmake	(working copy)
@@ -1,78 +1,70 @@
-###############################################################################
-# Find OpenNI
+#############################################################################
+# KidTsunami - Professional. Live. Video.
 #
-# This sets the following variables:
-# OPENNI_FOUND - True if OPENNI was found.
-# OPENNI_INCLUDE_DIRS - Directories containing the OPENNI include files.
-# OPENNI_LIBRARIES - Libraries needed to use OPENNI.
-# OPENNI_DEFINITIONS - Compiler flags for OPENNI.
-# 
-# For libusb-1.0, add USB_10_ROOT if not found
+# File:     CMakeLists.txt
+# Author:   Alexander Eichhorn <echa@kidtsunami.com>
+# Contents: CMake Find Module
+#
+#
+# Copyright 2012 KidTsunami. All Rights Reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+#############################################################################
 
-find_package(PkgConfig QUIET)
+# - Try to find OPENNI
+#
+#  OPENNI_FOUND - system has Unicap
+#  OPENNI_INCLUDE_DIRS - the Unicap include directories
+#  OPENNI_LIBRARIES - link these to use Unicap
+#  OPENNI_LIBRARY_DIRS - libraries directories
+#  OPENNI_CFLAGS - Unicap compile flags
+#  OPENNI_LDFLAGS - Unicap linker flags
 
-# Find LibUSB
-if(NOT WIN32)
-  pkg_check_modules(PC_USB_10 libusb-1.0)
-  find_path(USB_10_INCLUDE_DIR libusb-1.0/libusb.h
-            HINTS ${PC_USB_10_INCLUDEDIR} ${PC_USB_10_INCLUDE_DIRS} "${USB_10_ROOT}" "$ENV{USB_10_ROOT}"
-            PATH_SUFFIXES libusb-1.0)
+include(FindPkgConfig)
 
-  find_library(USB_10_LIBRARY
-               NAMES usb-1.0 
-               HINTS ${PC_USB_10_LIBDIR} ${PC_USB_10_LIBRARY_DIRS} "${USB_10_ROOT}" "$ENV{USB_10_ROOT}"
-               PATH_SUFFIXES lib)
-               
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(USB_10 DEFAULT_MSG USB_10_LIBRARY USB_10_INCLUDE_DIR)
-   
-  if(NOT USB_10_FOUND)
-    message(STATUS "OpenNI disabled because libusb-1.0 not found.")     
-    return()
-  else()
-    include_directories(SYSTEM ${USB_10_INCLUDE_DIR})
-  endif()
-endif(NOT WIN32)
- 
-if(${CMAKE_VERSION} VERSION_LESS 2.8.2)
-  pkg_check_modules(PC_OPENNI openni-dev)
-else()
-  pkg_check_modules(PC_OPENNI QUIET openni-dev)
-endif()
+if (NOT OPENNI_FIND_QUIETLY)
+    message (STATUS "Checking for OpenNI...")
+endif ()
 
-set(OPENNI_DEFINITIONS ${PC_OPENNI_CFLAGS_OTHER})
+pkg_check_modules(OPENNI_PC QUIET libopenni)
 
-set(OPENNI_SUFFIX)
-if(WIN32 AND CMAKE_SIZEOF_VOID_P EQUAL 8)
-  set(OPENNI_SUFFIX 64)
-endif(WIN32 AND CMAKE_SIZEOF_VOID_P EQUAL 8)
+if (OPENNI_PC_FOUND)
+    set (OPENNI_LIBRARY_DIRS ${OPENNI_PC_LIBRARY_DIRS})
+    set (OPENNI_INCLUDE_DIRS ${OPENNI_PC_INCLUDE_DIRS})
+    if (BUILD_SHARED_LIBS)
+        set (OPENNI_LIBRARIES ${OPENNI_PC_LIBRARIES})
+    else ()
+        set (OPENNI_LIBRARIES ${OPENNI_PC_STATIC_LIBRARIES})
+    endif ()
+    set (OPENNI_LDFLAGS ${OPENNI_PC_LDFLAGS_OTHER})
+    set (OPENNI_CFLAGS ${OPENNI_PC_CFLAGS_OTHER})
+    set (OPENNI_VERSION ${OPENNI_PC_VERSION})
 
-#add a hint so that it can find it without the pkg-config
-find_path(OPENNI_INCLUDE_DIR XnStatus.h
-          HINTS ${PC_OPENNI_INCLUDEDIR} ${PC_OPENNI_INCLUDE_DIRS} /usr/include/openni /usr/include/ni "${OPENNI_ROOT}" "$ENV{OPENNI_ROOT}"
-          PATHS "$ENV{OPEN_NI_INSTALL_PATH${OPENNI_SUFFIX}}/Include"
-          PATH_SUFFIXES openni include Include)
-#add a hint so that it can find it without the pkg-config
-find_library(OPENNI_LIBRARY 
-             NAMES OpenNI${OPENNI_SUFFIX}
-             HINTS ${PC_OPENNI_LIBDIR} ${PC_OPENNI_LIBRARY_DIRS} /usr/lib "${OPENNI_ROOT}" "$ENV{OPENNI_ROOT}"
-             PATHS "$ENV{OPEN_NI_LIB${OPENNI_SUFFIX}}"
-             PATH_SUFFIXES lib Lib Lib64)
+    if (NOT OPENNI_FIND_QUIETLY)
+        message(STATUS "  OpenNI found version: ${OPENNI_VERSION}")
+        message(STATUS "    includes:  ${OPENNI_INCLUDE_DIRS}")
+        message(STATUS "    cflags:    ${OPENNI_CFLAGS}")
+        message(STATUS "    libraries: ${OPENNI_LIBRARIES}")
+        message(STATUS "    libdirs:   ${OPENNI_LIBRARY_DIRS}")
+        message(STATUS "    ldflags:   ${OPENNI_LDFLAGS}")
+    endif ()
 
-if(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
-  set(OPENNI_LIBRARIES ${OPENNI_LIBRARY} ${LIBUSB_1_LIBRARIES})
-else()
-  set(OPENNI_LIBRARIES ${OPENNI_LIBRARY})
-endif()
+    set (OPENNI_FOUND true)
+else ()
+    set (OPENNI_FOUND false)
+    if (OPENNI_FIND_REQUIRED)
+        message(FATAL_ERROR "EE Could not find OpenNI.")
+    endif()
+endif ()
 
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(OpenNI DEFAULT_MSG OPENNI_LIBRARY OPENNI_INCLUDE_DIR)
-    
-mark_as_advanced(OPENNI_LIBRARY OPENNI_INCLUDE_DIR)
-
-if(OPENNI_FOUND)  
-  # Add the include directories
-  set(OPENNI_INCLUDE_DIRS ${OPENNI_INCLUDE_DIR})  
-  message(STATUS "OpenNI found (include: ${OPENNI_INCLUDE_DIRS}, lib: ${OPENNI_LIBRARY})")
-endif(OPENNI_FOUND)
-
